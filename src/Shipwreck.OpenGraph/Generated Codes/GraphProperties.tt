<#@ template language="C#" debug="True" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension="cs" #>
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;

namespace Shipwreck.OpenGraph
{
<#

var properties = new []
{
    new { Class = "GraphObject", Name = "AlternateLocale", Property = "locale:alternate", Plural = (string)null, Type = "string" },
    new { Class = "GraphObject", Name = "Image", Property = "image", Plural = (string)null, Type = "GraphImage" },
    new { Class = "GraphObject", Name = "Video", Property = "video", Plural = (string)null, Type = "GraphVideo" },
    new { Class = "GraphObject", Name = "Audio", Property = "audio", Plural = (string)null, Type = "GraphAudio" },
    
    new { Class = "MusicSong", Name = "Album", Property = "album", Plural = (string)null, Type = "MusicSongAlbum" },
    new { Class = "MusicSong", Name = "Musician", Property = "musician", Plural = (string)null, Type = "Profile" },
    
    new { Class = "MusicAlbum", Name = "Song", Property = "song", Plural = (string)null, Type = "MusicAlbumSong" },
    new { Class = "MusicAlbum", Name = "Musician", Property = "musician", Plural = (string)null, Type = "Profile" },
    
    new { Class = "MusicPlaylist", Name = "Song", Property = "song", Plural = (string)null, Type = "MusicAlbumSong" },
    new { Class = "MusicPlaylist", Name = "Creator", Property = "creator", Plural = (string)null, Type = "Profile" },
    
    new { Class = "MusicRadioStation", Name = "Creator", Property = "creator", Plural = (string)null, Type = "Profile" },
    
    new { Class = "VideoObject", Name = "Actor", Property = "actor", Plural = (string)null, Type = "Actor" },
    new { Class = "VideoObject", Name = "Director", Property = "director", Plural = (string)null, Type = "Profile" },
    new { Class = "VideoObject", Name = "Writer", Property = "writer", Plural = (string)null, Type = "Profile" },
    new { Class = "VideoObject", Name = "Tag", Property = "tag", Plural = (string)null, Type = "string" },
    
    new { Class = "VideoEpisode", Name = "Series", Property = "series", Plural = "AllSeries", Type = "VideoTVShow" },
    
    new { Class = "Article", Name = "Author", Property = "author", Plural = (string)null, Type = "Profile" },
    new { Class = "Article", Name = "Tag", Property = "tag", Plural = (string)null, Type = "string" },
    
    new { Class = "Book", Name = "Author", Property = "author", Plural = (string)null, Type = "Profile" },
    new { Class = "Book", Name = "Tag", Property = "tag", Plural = (string)null, Type = "string" },
};

foreach (var g in properties.GroupBy(p => p.Class))
{

#>
    partial class <#= g.Key #>
    {
<#

    foreach (var p in g)
    {
        var N = p.Name;
        var PL = p.Plural ?? (N + 's');
        var T = p.Type;
        var PN = p.Property;
        var CT = T == "string" ? "GraphObjectPropertyCollection" : $"GraphObjectChildCollection<{T}>";
#>
#region <#= N #>

<#
        if (T == "string")
        {
#>
        public <#= T #> <#= N #>
        {
            get => GetLocalProperty("<#= PN #>");
            set => SetLocalProperty("<#= PN #>", value);
        }
<#
        }
        else
        {
#>
        public <#= T #> <#= N #>
        {
            get => <#= PL #>?.FirstOrDefault();
        }
<#
        }
#>

        public IList<<#= T #>> <#= PL #>
        {
            get => new <#= CT #>(this, "<#= PN #>");
        }

#endregion <#= N #>

<#
    }

#>
    }
<#
}
#>
    partial class Graph
    {
<#

var objectTypes = new []
{
    "MusicSong", "MusicAlbum", "MusicPlaylist", "MusicRadioStation",
    "VideoMovie", "VideoEpisode", "VideoTVShow", "VideoOther",
    "Article", "Book", "Profile"
};

foreach (var T in objectTypes)
{
#>
        [DefaultValue(null)]
        public <#= T #> <#= T #>
        {
            get => _TypeObject as <#= T #>;
            set => _TypeObject = value ?? (_TypeObject is <#= T #> ? null : _TypeObject);
        }

<#
}

#>
    }
}